<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="agencies-db-consumeFlow1" doc:id="bb69e14c-2b6e-4f78-b2fe-c1c4265da72f" >
		<scheduler doc:name="Copy_of_Scheduler" doc:id="a5f71d80-9000-4f41-b693-52a2ac85e434" >
			<scheduling-strategy >
				<fixed-frequency frequency="30" timeUnit="SECONDS" />
			</scheduling-strategy>
		</scheduler>
		<os:retrieve doc:name="last_id" doc:id="96d64fac-2ee8-4b51-ae29-63ad06e0e77f" key="last_id" target="last_id" >
			<os:default-value ><![CDATA[#[0 as Number]]]></os:default-value>
		</os:retrieve>
		<logger level="INFO" doc:name="Logger" doc:id="3eafcc88-a5f7-4d36-a19c-9d33e9b0d64c" message="last_id = #[payload]"/>
		<mongo:list-collections doc:name="List collections" doc:id="4f8cd118-5b4e-41c4-9ca7-46313096b1be" config-ref="Test_Base_MongoDB_Config" target="coll_name"/>
		<logger level="INFO" doc:name="Logger" doc:id="05b2b0da-e911-4f56-9594-f666e6be36a1" message="list collections = #[payload]"/>
		<set-variable value="#[[]]" doc:name="Set max_id_arr" doc:id="2391ebc4-1a13-4588-9ec8-75b5a0b0c127" variableName="max_id_arr"/>
		<logger level="INFO" doc:name="Logger" doc:id="ae53dabf-c3c5-4dff-92a6-fa310c2d4c5a" message="max_id_arr = #[vars.max_id_arr]"/>
		<foreach doc:name="For Each" doc:id="271b5dca-2c31-4425-874f-75e8642f391b" collection="#[vars.coll_name]">
			<set-variable value="#[payload]" doc:name="Set c_name" doc:id="2bc67163-f448-48c6-b58b-5139a11d66b7" variableName="c_name"/>
			<logger level="INFO" doc:name="Logger" doc:id="3af97406-7073-4b13-adfe-65d5a47683c2" message="collection name = #[vars.c_name]"/>
			<mongo:find-documents doc:name="Find documents" doc:id="c3c142ec-3fc1-445b-87bc-129b2f005e12" config-ref="Test_Base_MongoDB_Config" collectionName="#[payload]" fields=",">
			</mongo:find-documents>
			<ee:transform doc:name="Records with id exceeded last_id" doc:id="911e61be-8806-487b-93cc-d2529ad0bc2a">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload filter((item, index) -> item.r_id > vars.last_id)]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<logger level="INFO" doc:name="Logger Find documents" doc:id="6cca5ccf-8d93-4082-ac7b-418e388fa57b" message="After find documents #[sizeOf(payload)]"/>
			<choice doc:name="Choice" doc:id="e9135bd4-23b1-49aa-9b6e-847491873229" >
				<when expression="#[payload != []]">
					<ee:transform doc:name="Transform Message" doc:id="d0717955-4d0d-4ae2-bfb3-47849984ef61">
				<ee:message>
				</ee:message>
						<ee:variables>
							<ee:set-variable variableName="max_id_arr"><![CDATA[%dw 2.0
output application/json
---
if ((payload maxBy ((item) -> item.r_id)).r_id != null)
    vars.max_id_arr + (payload maxBy ((item) -> item.r_id)).r_id
else
    vars.max_id_arr]]></ee:set-variable>
						</ee:variables>
			</ee:transform>
					<logger level="INFO" doc:name="Logger" doc:id="12469830-c609-47b2-b3d1-46c6c5fd4b06" message="max_id_arr among records = #[vars.max_id_arr]" />
					<set-variable value="#[Mule::p('fileSettings.folder') ++ vars.c_name ++ now() as String {format: &quot;yyyy-MM-dd&quot;} ++ &quot;-&quot; ++&#10;&#10;now() as String {format: &quot;hh-m-s&quot;} ++ &quot;.json&quot;]" doc:name="Set Variable" doc:id="ad82928e-e0e7-4a3a-94a4-13a8a46b8da5" variableName="file_name" />
					<file:write doc:name="Write" doc:id="edb561bc-eb46-4e96-b445-015fe514fb80" mode="CREATE_NEW" path="#[vars.file_name]" config-ref="File_Config">
					</file:write>
				</when>
				<otherwise>
					<logger level="INFO" doc:name="Logger" doc:id="a42cf42a-a651-4049-894f-bf5414d46c8d" message="Collection wasn't updated"/>
				</otherwise>
			</choice>
			<logger level="INFO" doc:name="Logger" doc:id="bd786f34-bbae-4e2c-a94f-d1f37abe2c06" message="#max_id_arr in each for each = #[vars.max_id_arr]"/>
		</foreach>
		<logger level="INFO" doc:name="Logger after for each" doc:id="45a07625-3fad-47f3-8d4b-0f18893a12b8" message="Logger after for each #[vars.max_id_arr]" />
		<os:store doc:name="Store" doc:id="24c57068-a6a0-4d4d-be1e-466f2ca2add1" key="last_id" failOnNullValue="false">
						<os:value><![CDATA[#[max(vars.max_id_arr)]]]></os:value>
					</os:store>
		<logger level="INFO" doc:name="Logger" doc:id="63142a09-5a97-4bbd-b256-04e5a90b48dd" message="#[vars.last_id]"/>
	</flow>
</mule>
